chunk_id,content
1,міністерство освіти науки укр національний університет «львівська політехніка» інститут компютерних наук інформаційних технологій кафедра систем штучного інтелекту звіт лабораторна робота 4 курсу моделювання аналіз даних інформаційних системах виконала студентка групи ші32 якимів анастасія викладач пелещишин оп львів 2024р
2,тема симуляція типів смо допомогою simpy мета дослідження різнотипних смо допомогою simpy завдання індивідуальні завдання обрати задачу переліку групі задачі повинні повторюватись кожної задачі підібрати варіант смо варіанти смо характеризує обрати варіант смо 1 смо втратами очікування 2 багатоканальні смо втратами очікування 3 смо очікуванням багатоканальні пристрої 4 смо повторними викликами обмеженою кількістю місць черзі залежно варіанту потрібно  побудувати записати модель смо вигляді блок схеми  реалізувати модель python використовуючи simpy  виконати імітаційне моделювання включіть звіт код програми результати моделювання короткий аналіз отриманих результатів  виконати покрокове виконання моделі додати знімки підтвердженням правильності алгоритму вихідні дані залежать прізвища хід роботи
3,хід роботи даної лабораторної роботи обрала задачу система пошуку збоїв банківській мережі задачу система пошуку збоїв банківській мережі віднести смо повторними викликами очікуванням черзі обмеженою кількістю місць черзі варіант 4 варіант підходить специфіку задачі повторні виклики виявлення збою система повторювати перевірки запити підтвердити вирішити проблему черга обмеженою кількістю місць мережа обр обляти обмежену кількість запитів черга переповнюється запити втрачатися користувачам доведеться повторно намагатися підключитися дозволить змоделювати поведінку системи відбувається моніторинг мережі ур ахуванням обмежень кількість місць черзі можливих повторних перевірок стабільності роботи вихідні дані даному варіанті смо ихідні дані визначаються моє прізвище якимів
4,моє прізвище якимів розрахуємо вихідні дані основі мого прізвища 1 кількість літер прізвищі кп прізвищі якимів 6 букв кп 6 2 кількість голосних літер кг голосні прізвищі кг 3 3 кількість приголосних літер кприг приголосні прізвищі кпри 3
5,вихідні дані 1 кількість заявок 200 кп 200 6 1200 заявок 2 кількість обслуговуючих каналів кг 3 3 кількість місць черзі кприг 3 дані використовувати реалізації обраної моделі simpy побудувати записати модель смо вигляді блок схеми табличний опис блок схеми етап опис вхідний запит запит надходить систему обслуговування вільний обслуговуючий канал перевіряється доступний обслуговуючий канал 3 каналів вільний канал запит переходить обробку канали зайняті запит надходить чергу очікування черзі черга обмежена 3 місць перевіряється вільне черзі запит стає чергу очікуючи звільнення каналів черга заповнена черга повна переходимо повторного виклику повторний виклик зробити повторний виклик запиту
6,повторний виклик запит повторно намагається зайти систему певного часу відмова повторний виклик недоступний запит відхиляється системою вихід системи обслуговування відмови запит виходить системи блоксхема системи масового обслуговування повторними викликами очікуванням черзі обмеженою кількістю місць 3 місця обслуговує 1200 заявок 3 обслуговуючих канали виглядатиме створювала блок схему допомогою сервісу lucidchart посилання блок схему реалізувати модель python використовуючи simpy лабораторну роботу виконувала середовищі google colab посилання нотбук
7,1 імпорт необхідних бібліотек 2 ініціалізуємо вихідні параметри моделі змінні збору статистики 3 створ юємо процес обслуговування запитів 4 генеруємо потік запиті 5 створ юємо модел ь запуск аємо симуляці результати моделювання уривок
8,1 обслуговування запитів o запити обслуговуються порядку надходження канали вільні запит 0 обслуговується позначці часу 000 запит 1 197 o обслуговування кожного запиту змінюється надходження обслуговування запитів слідує випадковому роз поділу 2 формування черги o початкові запити 0 45 обслуговуються затримок системі вистачає ресурсів o починаючи запиту 46 очікує черзі 4818 обслуговується 4918 черга починає заповнюватися обмеженість ресурсів оскі льки канали зайняті o запити заповнення черги потрапити обслуговування запити 493 494 496 497 роблять повторні виклики система момент перевантажена затримує обробку 3 повторні виклики o запит зайняти канал перевантаженість заповнену
9,чергу повторно пробують отримати доступ певний інтервал часу o повторні виклики відбуваються запитів 493 494 497 спершу змогли отримати обслуговування повторно намагаються зробити нарешті отримують доступ
10,аналіз навантаження 1 пропускна здатність системи o початку моделювання система ефективно обробляє запити використовуючи доступні канали o збільшенні кількості запитів часу моделювання система досягає навантаження призводить черг повторних викликів 2 середній обслуговування черги o система обмежену здатність обробляти запити зростає середня довжина черги o середній очікуванн черзі кількість повторних викликів показують наскільки система наближається межі ефективної роботи внести корективи програмний код отримання наступних результатів 1 дослідити параметри загальної черги середнє значення довжини черги максимальну довжину черги розподіл довжини черги відобразити графічно середній перебування заявки черзі максимальний перебування заявки черзі 2 дослідити кількість повторних викликів смо необхідно
11,визначити скільки середньому викликів робить користувач обслуженим 3 зібрану статистику попередній програмі різними результатами ситуацій представити графічно вигляді гістограми 4 дослідити параметри черг кожного каналів параметри п1 5 дослідити залежність кількості відмов обслуговуванні кількості повторних викликів росту інтенсивності вхідного потоку заявок збільшити інтенсивність вхідного потоку 1х 2х 5х 10х 20х 50х 100х виконати вимоги внесемо корективи код 1 збір обчислення статистики черги середня максимальна довжина черги перебування заявок черзі 2 аналіз повторних викликів середня кількість повторних спроб одну заявку 3 графічне представлення результатів гіст ограми довжини черги повторних викликів 4 дослідження параметрів черг кожного каналу 5 моделювання інтенсивностей вхідного потоку
12,модифікований код import simpy import random import numpy as np import matplotlibpyplot as plt вихідні параметри numrequests 500 numchannels 3 queuecapacity 3 retrydelay 1 змінні збору статистики queuelengths timeinqueue retrycounts failedrequests 0 лічильник відмов def requestservice env requesti d server queue retrycounts процес обробки запиту повторними викликами обмеженою чергою можливими відмовами global failedrequests arrivaltime envnow retrycount 0 while true with serverrequest as req result yield req envtimeoutretrydelay if req result запит обслуговується waittime envnow arrivaltime timeinqueueappendwaittime queuelengthsappend lenqueueitems
13,printfзапит requestid обслуговується envnow 2f очікування waittime 2f yield envtimeoutrandomexpovariate 10 break elif lenqueueitems queuecapacity черзі queuelengthsappend lenqueueitems queueputrequestid yield envtimeoutretrydelay else черга заповнена потрібно відмовити retrycount 1 retrycountsappendretrycount failedrequests 1 фіксуємо відмову printfзапит requestid відхилено envnow 2f retrycount повторних спроб break def generaterequests env server queue intensitymultiplier генератор запитів інтервалом прибуття враховуючи множник інтенсивності 1 століття rangenumrequests
14,1 століття rangenumrequests envprocessrequestserviceenv 1 століття server queue retrycounts застосовуємо множник інтенсивності зменшуючи запитами yield envtimeoutrandomexpovariate 10 intensitymultiplier def analyzestatistics аналіз виведення статистики черги повторних викликів відмов printnзагальна статистика черги if queuelengths printfсередня довжина черги npmeanqueuelengths 2f printfмаксимальна довжина черги npmaxqueuelengths 2f else printсередня довжина черги na printмаксимальна довжина черги na if timeinqueue printfсередній перебування черзі npmeantimeinqueue 2f printfмаксимальний перебування черзі npmaxtimeinqueue 2f else printсередній перебування черзі na
15,printмаксимальний перебування черзі na if retrycounts printfсередня кількість повторних викликів npmeanretrycounts 2f printfмаксимальна кількість повторних викликів запиту npmaxretrycounts 2f else printсередня кількість повторних викликів na printмаксимальна кількість повторних викликів запиту na printfкількість відмов failedrequests def plothistogram data title xlabel ylabel функція побудови гістограми pltfigurefigsize 10 6 plthistdata bins 20 color skyblue edgecolor black plttitletitle pltxlabelxlabel pltylabelylabel pltshow основна функція моделювання def runsimulation intensitymultiplier 1 global queuelengths timeinqueue retrycounts failedrequests queuelengths timeinqueue
16,queuelengths timeinqueue retrycounts failedrequests 0 ініціалізація середовища ресурсів env simpyenvironment server simpyresourceenv capacitynumchannels queue simpystoreenv capacityqueuecapacity запуск генерації запитів envproc essgeneraterequestsenv server queue intensitymultiplier envrun виведення статистики analyzestatistics графічне представлення if queuelengths plothistogramqueuelengths розподіл довжини черги довжина черги кількість else printнемає даних побудови гістограми довжини черги if timeinqueue plothistogramtimeinqueue розподіл часу перебування черзі черзі кількість запитів else printнемає даних побудови гістограми часу перебування черзі if retrycounts
17,if retrycounts plothistogramretrycounts розподіл повторних викликів кількість повторних викликів кількість запитів else printнемає даних ля побудови гістограми повторних викликів запуск моделювання 100x інтенсивності printnмоделювання інтенсивністю потоку 100x runsimulationintensitymultiplier 100 моделювання інтенсивністю потоку 1x
18,даних побудови гістограми повторних викликів моделювання інтенсивністю потоку 2x моделювання інтенсивністю потоку 5x моделювання інтенсивністю потоку 10x моделювання інтенсивністю потоку 20x моделювання інтенсивністю потоку 50x моделювання інтенсивністю потоку 100x
19,модифікація коду полягала додаванні детальної статистики черг повторних викликів додано обчислення середньої максимальної довжини черги часу перебування заявки черзі середньої кількості повторних спроб одну заявку дослідження розширене аналізом залежності параметрів інтенсивності вхідного потоку дало змогу оцінити змін юються параметри черги кількість відмов збільшення навантаження систему графічного аналізу гістограми розподілу черги часу перебування черзі кількості повторних викликів видно низьких значеннях інтенсивності 1x черга накопичується повторних викликів збільшенням інтенсивності 10x кількість відмов повторних спроб суттєво зростає вказує система межу ефективності накопичення черги відмови стають зна чними призвести значного зниження якості обслуговування
20,значного зниження якості обслуговування 1 середня максимальна довжина черги збільшенні інтенсивності вхідного потоку 2x 5x 10x разів середня максимальна довжина черги зростають свідчить ро система швидко досягає межі пропускної здатності черга починає переповнюватися низької інтенсивності потоку система підтримує коротку чергу вказує достатню кількість ресурсів обробки запитів звичайному режимі висок их інтенсивностях 50x 100x максимальна довжина черги стає більшою середню означає періодичні пікові навантаження система обробити
21,вчасно демонструє значних перевантажень відбувається накопичення питів критичних рівнів призводить затримок роботі системи 2 середній максимальний перебування заявки черзі зростанням інтенсивності потоку середній перебування заявки черзі збільшується низьких значень інтенсивності 1x 2x середній очікування черзі незначним запити обробляються збільшенні інтенсивності часу перебування зростає нелінійно свідчить обмеження системи обробці великої кількості запитів максимальний перебування черзі великий високих інтенсивностях показує наскільки сильно затримуватися обробка запитів пікові моменти критичним користувачів надмірний очікування погіршує досвід користув ача призвести втрати запитів дочекалися обслуговування
22,3 середня кількість повторних спроб одну заявку низькій інтенсивності потоку повторні спроби рідкісними відсутніми вказує нормальну роботу системи обхідності повторних викликів інтенсивностях 10x вище середня кількість повторних спроб одну заявку починає різко зростати свідчить користувачі змушені повторно подавати запити переповненість черги озн акою система досягла межі обслуговування високих інтенсивностях 50x 100x кількість повторних спроб стає значною призводить додаткового навантаження систему створювати більші черги ситуація казує система справляється обробкою запитів надходять негативно позначається ефективності обслуговування загальний висновок загалом зростання інтенсивності вхідного потоку призводить суттєвого збільшення довжини
23,черги часу перебування заявок черзі кількості повторних спроб вказує потребу масштабуванні системи збільшенні пропускної здатності запобігання критичним затримкам відмовам обслуговуванні високих навантаженнях виснов ок ході викон ання даної лабораторної роботи досліджено поведінку систем масового обслуговування допомогою бібліотеки simpy python основна задача полягала моделюванні системи могла обробляти вхідні запити умовах обмеженої кількості обслуговуючих ка налів місць черзі реалізації обрано варіант смо повторними викликами обмеженою кількістю місць черзі дозволило змоделювати процес пошуку збоїв банківській мережі результаті моделювання отримані показники допомагають цінити продуктивність системи умовах різного навантаження середня максимальна довжина черги кількість відмов кількість повторних викликів
24,розподіл часу очікування запитів черзі показники важливими аналізу наван таження визначення меж ефективної роботи системи
